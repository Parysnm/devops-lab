name: Tofu Plan
on:
  pull_request:
    branches: ["main"]

jobs:
  detect-changes:  # Nouveau job pour détecter les dossiers modifiés
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.changed-files.outputs.all_modified_files }}  #  Stocke les dossiers modifiés en output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45  # Utilise tj-actions pour lister les fichiers modifiés
        with:
          dir_names: true
          escape_json: true
          json: true
          files: "td5/"

  plan:
    needs: detect-changes  # Attente de la détection des changements avant d'exécuter ce job
    if: ${{ needs.detect-changes.outputs.folders != '[]' }}  #Vérifie si des dossiers ont changé
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.folders) }}  # Exécute chaque dossier en parallèle
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      id-token: write 
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.PLAN_ROLE_ARN }}
          role-session-name: plan-${{ github.run_number }}-${{ github.actor }}
          aws-region: us-east-2

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Run Tofu Plan
        working-directory: ${{ matrix.folder }}  # MOO: Exécute tofu plan dans chaque dossier OpenTofu en parallèle
        run: |
          tofu init -no-color -input=false
          tofu plan -no-color -input=false -lock=false

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        if: always()
        env:
          RESULT_EMOJI: ${{ steps.plan.outcome == 'success' && '✅' || '⚠ ' }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ${{ env.RESULT_EMOJI }} `tofu plan` output in ${{ matrix.folder }}
            ```${{ steps.plan.outputs.stdout }}```
