name: Tofu Apply
on:
  push:
    branches: ["main"]

jobs:
  detect-changes:  #  Job pour détecter les dossiers modifiés
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.changed-files.outputs.all_modified_files && steps.changed-files.outputs.all_modified_files != '[]' && steps.changed-files.outputs.all_modified_files != '' && format('{{0}}', steps.changed-files.outputs.all_modified_files) }}  #  Stocke les dossiers modifiés en output
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          dir_names: true
          escape_json: true
          json: true
          files: "td5/"

  apply:
    needs: detect-changes  # Attente de la détection des changements avant d'exécuter ce job
    if: ${{ needs.detect-changes.outputs.folders != '[]' && needs.detect-changes.outputs.folders != '' }}  # Vérifie si la liste des dossiers n'est pas vide
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.folders || '[]') }}  # Transforme en JSON valide et évite les erreurs
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.APPLY_ROLE_ARN }}
          role-session-name: apply-${{ github.run_number }}-${{ github.actor }}
          aws-region: us-east-2

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1

      - name: Run Tofu Apply
        working-directory: ${{ matrix.folder }}
        run: |
          tofu init -no-color -input=false
          tofu apply -no-color -input=false -auto-approve

      - name: Find current PR
        uses: jwalton/gh-find-current-pr@master
        id: find_pr
        with:
          state: all

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.find_pr.outputs.number
        env:
          RESULT_EMOJI: ${{ steps.apply.outcome == 'success' && '✅' || '⚠ ' }}
        with:
          issue-number: ${{ steps.find_pr.outputs.number }}
          body: |
            ## ${{ env.RESULT_EMOJI }} `tofu apply` output in ${{ matrix.folder }}
            ```${{ steps.apply.outputs.stdout }}```

